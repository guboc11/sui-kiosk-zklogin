"use client"
import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { createNetworkConfig, SuiClientProvider, WalletProvider } from '@mysten/dapp-kit';
import { KioskClientProvider } from './context/KioskClientContext';
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import { getFullnodeUrl } from '@mysten/sui/client';


const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  
	const queryClient = new QueryClient();

	const { networkConfig } = createNetworkConfig({
		localnet: { url: getFullnodeUrl('localnet') },
		devnet: { url: getFullnodeUrl('devnet') },
		testnet: { url: getFullnodeUrl('testnet') },
		mainnet: { url: getFullnodeUrl('mainnet') },
	});
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <QueryClientProvider client={queryClient}>
          <SuiClientProvider defaultNetwork="testnet" networks={networkConfig}>
            <WalletProvider>
              <KioskClientProvider>
                {children}
            </KioskClientProvider>
          </WalletProvider>
        </SuiClientProvider>
      </QueryClientProvider>
      </body>
    </html>
  );
}
